const tg = window.Telegram.WebApp;
tg.ready();

let balance = 1000;
let garage = [];

const marketData = [
    { id: 1, name: "Peugeot 508", price: 0, image: "images/peugeot508.png", description: "–ü—Ä–æ—Å—Ç–æ—Ä–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∞–ª, 225 –∫.—Å., 6.5 –ª/100 –∫–º, –ø–µ—Ä–µ–¥–Ω—ñ–π –ø—Ä–∏–≤—ñ–¥", profit: "0.16 TXY/–¥–µ–Ω—å", reliability: "93%", limit: 1 },
    { id: 2, name: "Kia Optima", price: 30, image: "images/kiaoptima.png", description: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∏–π —Å–µ–¥–∞–Ω, 188 –∫.—Å., 8 –ª/100 –∫–º, –ø–µ—Ä–µ–¥–Ω—ñ–π –ø—Ä–∏–≤—ñ–¥", profit: "0.4 TXY/–¥–µ–Ω—å", reliability: "95%", limit: 15 },
    { id: 3, name: "Honda Accord", price: 35, image: "images/hondaaccord.png", description: "–ë—ñ–∑–Ω–µ—Å-—Å–µ–¥–∞–Ω, 252 –∫.—Å., 7.5 –ª/100 –∫–º", profit: "0.46 TXY/–¥–µ–Ω—å", reliability: "95%", limit: 15 },
    { id: 4, name: "Kia Sorento", price: 45, image: "images/kiasorento.png", description: "–°—ñ–º–µ–π–Ω–∏–π –∫—Ä–æ—Å–æ–≤–µ—Ä, 281 –∫.—Å., 9 –ª/100 –∫–º, –ø–æ–≤–Ω–∏–π –ø—Ä–∏–≤—ñ–¥", profit: "0.6 TXY/–¥–µ–Ω—å", reliability: "95%", limit: 15 },
    { id: 5, name: "Honda CR-V", price: 40, image: "images/hondacrv.png", description: "–ö–æ–º–ø–∞–∫—Ç–Ω–∏–π –∫—Ä–æ—Å–æ–≤–µ—Ä, 193 –∫.—Å., 7.8 –ª/100 –∫–º", profit: "0.5 TXY/–¥–µ–Ω—å", reliability: "95%", limit: 15 },
    { id: 6, name: "Audi A7", price: 85, image: "images/audia7.png", description: "–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π —Ñ–∞—Å—Ç–±–µ–∫, 340 –∫.—Å., 8.5 –ª/100 –∫–º, –ø–æ–≤–Ω–∏–π –ø—Ä–∏–≤—ñ–¥", profit: "1.13 TXY/–¥–µ–Ω—å", reliability: "97%", limit: 100 },
    { id: 7, name: "Audi Q7", price: 90, image: "images/audiq7.png", description: "–ü—Ä–µ–º—ñ–∞–ª—å–Ω–∏–π –ø–æ–∑–∞—à–ª—è—Ö–æ–≤–∏–∫, 340 –∫.—Å., 9.2 –ª/100 –∫–º, Quattro", profit: "1.2 TXY/–¥–µ–Ω—å", reliability: "97%", limit: 100 },
    { id: 8, name: "Range Rover Velar", price: 95, image: "images/velar.png", description: "–°—Ç–∏–ª—å–Ω–∏–π SUV, 400 –∫.—Å., 9.8 –ª/100 –∫–º", profit: "1.26 TXY/–¥–µ–Ω—å", reliability: "97%", limit: 100 },
    { id: 9, name: "BMW X7", price: 135, image: "images/bmwx7.png", description: "–õ—é–∫—Å–æ–≤–∏–π –ø–æ–∑–∞—à–ª—è—Ö–æ–≤–∏–∫, 340 –∫.—Å., 10 –ª/100 –∫–º", profit: "1.8 TXY/–¥–µ–Ω—å", reliability: "97%", limit: 100 },
    { id: 10, name: "Porsche Cayenne", price: 140, image: "images/cayenne.png", description: "–ü–æ—Ç—É–∂–Ω–∏–π –∫—Ä–æ—Å–æ–≤–µ—Ä, 550 –∫.—Å., 10.5 –ª/100 –∫–º", profit: "1.86 TXY/–¥–µ–Ω—å", reliability: "97%", limit: 100 },
    { id: 11, name: "Porsche Panamera", price: 150, image: "images/panamera.png", description: "–°–ø–æ—Ä—Ç–∏–≤–Ω–∏–π —Å–µ–¥–∞–Ω, 630 –∫.—Å., 9.5 –ª/100 –∫–º", profit: "2 TXY/–¥–µ–Ω—å", reliability: "97%", limit: 100 },
    { id: 12, name: "BMW M8", price: 160, image: "images/bmwm8.png", description: "–£–ª—å—Ç—Ä–∞—Å–ø–æ—Ä—Ç –∫—É–ø–µ, 625 –∫.—Å., 12 –ª/100 –∫–º", profit: "2.13 TXY/–¥–µ–Ω—å", reliability: "98%", limit: null },
    { id: 13, name: "Tesla Model S", price: 170, image: "images/teslamodels.png", description: "–ï–ª–µ–∫—Ç—Ä–æ—Å–µ–¥–∞–Ω, 1020 –∫.—Å., –∑–∞–ø–∞—Å —Ö–æ–¥—É 637 –∫–º", profit: "2.26 TXY/–¥–µ–Ω—å", reliability: "98%", limit: null },
    { id: 14, name: "Mercedes-Benz V-Class", price: 175, image: "images/vclass.png", description: "–ú—ñ–Ω—ñ–≤–µ–Ω, 237 –∫.—Å., 8.5 –ª/100 –∫–º", profit: "2.33 TXY/–¥–µ–Ω—å", reliability: "98%", limit: null },
    { id: 15, name: "Mercedes-Maybach GLS 600", price: 265, image: "images/maybachgls.png", description: "–õ—é–∫—Å–æ–≤–∏–π SUV, 557 –∫.—Å., 12 –ª/100 –∫–º", profit: "3.53 TXY/–¥–µ–Ω—å", reliability: "99%", limit: null },
    { id: 16, name: "Bentley Bentayga", price: 280, image: "images/bentayga.png", description: "–ï–ª—ñ—Ç–Ω–∏–π SUV, 635 –∫.—Å., 13 –ª/100 –∫–º", profit: "3.73 TXY/–¥–µ–Ω—å", reliability: "99%", limit: null },
    { id: 17, name: "Mercedes-Maybach S680", price: 300, image: "images/maybachs680.png", description: "–õ—é–∫—Å–æ–≤–∏–π —Å–µ–¥–∞–Ω, 630 –∫.—Å., 12.5 –ª/100 –∫–º", profit: "4 TXY/–¥–µ–Ω—å", reliability: "99%", limit: null },
    { id: 18, name: "Bentley Continental GT Speed", price: 500, image: "images/continentalgt.png", description: "–ü–æ—Ç—É–∂–Ω–µ –∫—É–ø–µ, 659 –∫.—Å., 14 –ª/100 –∫–º", profit: "6.66 TXY/–¥–µ–Ω—å", reliability: "99%", limit: null }
    // –ú–æ–∂–µ—à –¥–æ–¥–∞–≤–∞—Ç–∏ —ñ–Ω—à—ñ –∞–≤—Ç–æ —Ç—É—Ç
];

const navButtons = document.querySelectorAll(".navbar button");
const pages = document.querySelectorAll(".page");

navButtons.forEach(button => {
    button.addEventListener("click", () => {
        const targetPage = button.getAttribute("data-page");
        pages.forEach(page => page.classList.add("hidden"));
        navButtons.forEach(btn => btn.classList.remove("active"));

        document.getElementById(targetPage).classList.remove("hidden");
        button.classList.add("active");

        if (targetPage === 'market') renderMarket();
        if (targetPage === 'garage') renderGarage();
    });
});

function renderMarket() {
    const marketContainer = document.getElementById('market-cars');
    marketContainer.innerHTML = '';

    marketData.forEach(car => {
        const card = document.createElement('div');
        card.className = 'car-card';
        card.innerHTML = `
            <img src="${car.image}" alt="${car.name}">
            <div class="car-details">
                <div class="car-name">${car.name}</div>
                <div class="car-description">${car.description}</div>
                <div class="car-stats">üíµ –ü—Ä–∏–±—É—Ç–æ–∫: ${car.profit}</div>
                <div class="car-reliability">üõ°Ô∏è –ù–∞–¥—ñ–π–Ω—ñ—Å—Ç—å: ${car.reliability}</div>
                <div class="car-stats">üí∞ ${car.price === 0 ? '–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ' : car.price + ' TXY'}</div>
            </div>
        `;
        card.onclick = () => openModal(car);
        marketContainer.appendChild(card);
    });
}

function filterMarket(type) {
    let filtered = [];
    if (type === 'cheap') {
        filtered = marketData.filter(car => car.price <= 100);
    } else if (type === 'expensive') {
        filtered = marketData.filter(car => car.price > 100);
    } else {
        filtered = marketData;
    }

    const marketContainer = document.getElementById('market-cars');
    marketContainer.innerHTML = '';
    filtered.forEach(car => {
        const card = document.createElement('div');
        card.className = 'car-card';
        card.innerHTML = `
            <img src="${car.image}" alt="${car.name}">
            <div class="car-details">
                <div class="car-name">${car.name}</div>
                <div class="car-description">${car.description}</div>
                <div class="car-stats">üíµ –ü—Ä–∏–±—É—Ç–æ–∫: ${car.profit}</div>
                <div class="car-reliability">üõ°Ô∏è –ù–∞–¥—ñ–π–Ω—ñ—Å—Ç—å: ${car.reliability}</div>
                <div class="car-stats">üí∞ ${car.price === 0 ? '–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ' : car.price + ' TXY'}</div>
            </div>
        `;
        card.onclick = () => openModal(car);
        marketContainer.appendChild(card);
    });
}
function openModal(car) {
    const modal = document.getElementById('carModal');
    document.getElementById('modalCarImage').src = car.image;
    document.getElementById('modalCarName').innerText = car.name;
    document.getElementById('modalCarDescription').innerText = `–û–ø–∏—Å: ${car.description}`;
    document.getElementById('modalCarProfit').innerText = `–ü—Ä–∏–±—É—Ç–æ–∫: ${car.profit}`;
    document.getElementById('modalCarReliability').innerText = `–ù–∞–¥—ñ–π–Ω—ñ—Å—Ç—å: ${car.reliability}`;
    document.getElementById('modalCarPrice').innerText = car.price === 0 ? "–û—Ç—Ä–∏–º–∞—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ" : `–¶—ñ–Ω–∞: ${car.price} TXY`;

    document.getElementById('modalBuyButton').onclick = () => {
        buyCar(car.id);
        closeModal();
    };

    modal.classList.remove('hidden');
}

function closeModal() {
    document.getElementById('carModal').classList.add('hidden');
}

document.getElementById('closeModal').addEventListener('click', closeModal);

function buyCar(carId) {
    const car = marketData.find(c => c.id === carId);
    if (!car) return;

    if (car.price > balance) {
        alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ TXY –¥–ª—è –ø–æ–∫—É–ø–∫–∏!");
        return;
    }

    if (car.limit !== null) {
        const count = garage.filter(c => c.id === carId).length;
        if (count >= car.limit) {
            alert("–î–æ—Å—è–≥–Ω—É—Ç–æ –ª—ñ–º—ñ—Ç –ø–æ–∫—É–ø–∫–∏ —Ü—ñ—î—ó –º–∞—à–∏–Ω–∏!");
            return;
        }
    }

    balance -= car.price;
    document.getElementById('balance').innerText = balance;
    garage.push(car);

    saveGarage();
    saveBalance();
    renderGarage();

    alert(`–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ ${car.name}! üöó`);
}

function renderGarage() {
    const garageContainer = document.getElementById('garage-cars');
    garageContainer.innerHTML = '';

    if (garage.length === 0) {
        garageContainer.innerHTML = "<p>–£ –≤–∞—Å –Ω–µ–º–∞—î –º–∞—à–∏–Ω. –ö—É–ø—ñ—Ç—å –∞–≤—Ç–æ –Ω–∞ —Ä–∏–Ω–∫—É!</p>";
    } else {
        garage.forEach(car => {
            const item = document.createElement('div');
            item.className = 'car-card';
            item.innerHTML = `
                <img src="${car.image}" alt="${car.name}">
                <div class="car-details">
                    <div class="car-name">${car.name}</div>
                    <div class="car-description">${car.description}</div>
                    <div class="car-stats">üíµ –ü—Ä–∏–±—É—Ç–æ–∫: ${car.profit}</div>
                    <div class="car-reliability">üõ°Ô∏è –ù–∞–¥—ñ–π–Ω—ñ—Å—Ç—å: ${car.reliability}</div>
                </div>
            `;
            garageContainer.appendChild(item);
        });
    }
}

// LocalStorage
function saveGarage() {
    localStorage.setItem('garage', JSON.stringify(garage));
}

function loadGarage() {
    const data = localStorage.getItem('garage');
    if (data) garage = JSON.parse(data);
}

function saveBalance() {
    localStorage.setItem('balance', balance);
}

function loadBalance() {
    const data = localStorage.getItem('balance');
    if (data !== null) {
        balance = Number(data);
        document.getElementById('balance').innerText = balance;
    }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
loadGarage();
loadBalance();
renderMarket();
renderGarage();
document.getElementById('market').classList.add('active');
